@model ECommerceProject1.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />
    @*@Html.ValidationSummary("", new { @class = "text-danger" })*@
    <div class="form-group">
        @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>

    @*<div class="form-group" hidden>
            @Html.LabelFor(m => m.UserType, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                <select id="userType" name="UserType" class="form-control">

                    <option value="Customer">Customer</option>
                    <option value="Admin">Admin</option>
                </select>
            </div>
        </div>*@
    <div class="form-group"hidden>
        @Html.LabelFor(m => m.UserType, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            <select id="userType" name="UserType" class="form-control">
                <option value="Customer" selected>Customer</option>
                <option value="Admin">Admin</option>
            </select>
        </div>
    </div>


    @*<div class="form-group">
            @Html.LabelFor(model => model.UserType, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.UserType, GetAvailableUserTypes(), "Select User Type", new { @class = "form-control" })
            </div>
        </div>*@
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register" />
        </div>
    </div>
    @*@functions {
            public List<SelectListItem> GetAvailableUserTypes()
            {
                // Define the list of available user types here
                var userTypes = new List<SelectListItem>
            {
                //new SelectListItem { Text = "Admin", Value = "Admin" },
                new SelectListItem { Text = "Customer", Value = "Customer" },
                // Add more user types as needed
            };

                return userTypes;
            }
        }*@

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
